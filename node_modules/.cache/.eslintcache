[{"C:\\Users\\yooni\\Desktop\\covid19ver2\\covid19\\src\\index.js":"1","C:\\Users\\yooni\\Desktop\\covid19ver2\\covid19\\src\\store.js":"2","C:\\Users\\yooni\\Desktop\\covid19ver2\\covid19\\src\\App.js":"3","C:\\Users\\yooni\\Desktop\\covid19ver2\\covid19\\src\\components\\Main.js":"4","C:\\Users\\yooni\\Desktop\\covid19ver2\\covid19\\src\\components\\Header.js":"5","C:\\Users\\yooni\\Desktop\\covid19ver2\\covid19\\src\\components\\Board.js":"6"},{"size":286,"mtime":1633345147012,"results":"7","hashOfConfig":"8"},{"size":103,"mtime":1633345146945,"results":"9","hashOfConfig":"8"},{"size":1074,"mtime":1633345147167,"results":"10","hashOfConfig":"8"},{"size":4238,"mtime":1633345180110,"results":"11","hashOfConfig":"8"},{"size":5633,"mtime":1633345180078,"results":"12","hashOfConfig":"8"},{"size":8292,"mtime":1633345180050,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wm50uk",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\yooni\\Desktop\\covid19ver2\\covid19\\src\\index.js",[],"C:\\Users\\yooni\\Desktop\\covid19ver2\\covid19\\src\\store.js",[],"C:\\Users\\yooni\\Desktop\\covid19ver2\\covid19\\src\\App.js",[],"C:\\Users\\yooni\\Desktop\\covid19ver2\\covid19\\src\\components\\Main.js",["29"],"import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Board from './Board';\nimport getISO2 from 'country-iso-3-to-2';\nimport { Tooltip } from './Header';\nimport TooltipButton from '../asset/tooltipbutton.png';\n// import flags from '../asset/flags/png';\nfunction importAll(r) {\n  let images = {};\n  r.keys().forEach((item, index) => {\n    images[item.replace('./', '')] = r(item);\n  });\n  return images;\n}\nconst images = importAll(\n  require.context('../asset/flags/png', false, /\\.(png|jpe?g|svg)$/),\n);\n\nconst Wrapper = styled.div`\n  margin-top: 15px;\n  padding: 0 5%;\n  font-family: Ubuntu;\n`;\n\nconst Header = styled.header`\n  height: 80px;\n  border-radius: 40px 40px 0 0;\n  background-color: #1a4556;\n  padding: 20px 30px;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Flag = styled.div`\n  background-image: url('${({ countryName }) =>\n    images[`${countryName}.png`]?.default}');\n  background-repeat: no-repeat;\n  background-size: contain;\n  height: 20px;\n  width: 20px;\n  padding-left: 30px;\n  white-space: nowrap;\n  font-size: 18px;\n  font-weight: 800;\n\n  color: #fff;\n`;\n\nconst UpdateDate = styled.div`\n  color: #fff;\n  font-size: 12px;\n  font-weight: 700;\n  margin: 15px 0 0 0;\n`;\n\nconst CloseButton = styled.div`\n    width: 15px;\n    height: 15px;\n    position: absolute;\n    top: 50%;\n    right: 5%;\n  transform: translateY( -50%);\n  &:after {\n      content: '';\n      height: 15px;\n      border-left: 2px solid #bbb;\n      position: absolute;\n      transform: rotate(45deg);\n      left: 5px;\n  }\n\n  &:before {\n      content: '';\n      height: 15px;\n      border-left: 2px solid #bbb;\n      position: absolute;\n      transform: rotate(-45deg);\n      left: 5px;\n  }\n}\n`;\n\nconst MainTooltip = styled(Tooltip)`\n  top: 90px;\n\n  &:after {\n    border: 39px solid transparent;\n    border-bottom-color: #a6a6a6;\n    border-top: 0;\n    border-right: 0;\n    margin-left: -89.5px;\n    margin-top: -39px;\n  }\n`;\n\nconst Main = ({ countryCode, setCountryCode }) => {\n  const [isTooltipShown, setIsTooltipShown] = useState(false);\n  const [covidData, setCovidData] = useState(null);\n  const [restriction, setRestriction] = useState(null);\n  console.log('covid', covidData);\n  useEffect(() => {\n    axios.get(`/covid/${countryCode}`).then((res) => setCovidData(res.data));\n    axios\n      .get(`/covid/restriction/${getISO2(countryCode)}`)\n      .then((res) => setRestriction(res.data || []))\n      .catch((e) => {\n        setRestriction([]);\n      });\n  }, [countryCode]);\n\n  if (!covidData || !restriction) return null;\n  const updateDateSplit = new Date(\n    covidData.data[covidData.data.length - 1].date,\n  )\n    .toDateString()\n    .split(' ');\n  return (\n    <Wrapper>\n      <Header>\n        <img\n          src={TooltipButton}\n          width={15}\n          height={15}\n          style={{ position: 'absolute', top: '27px', left: '60%' }}\n          onClick={() => setIsTooltipShown((prev) => !prev)}\n        />\n        {isTooltipShown && (\n          <MainTooltip>\n            The data for COVID-19 figurative data is from Our World in Data\n            (https://ourworldindata.org/). <br /> <br /> The data for COVID-19\n            travel restrictions is from Korea Information Society Agency\n            (https://www.data.go.kr/). Hence the primary data was in Korean.\n            Therefore language changes by user is powered by Google Translate\n            thus the website does not hold any accuracy impact on the\n            translation.\n            <br />\n            <br />\n            <span\n              style={{ fontWeight: 700 }}\n              onClick={() => setIsTooltipShown(false)}\n            >\n              Click to Close\n            </span>\n          </MainTooltip>\n        )}\n        <Flag countryName={covidData.location.toLowerCase()}>\n          {covidData.location}\n        </Flag>\n        <UpdateDate>\n          Updated :\n          {` ${updateDateSplit[2]} ${updateDateSplit[1].toUpperCase()} ${\n            updateDateSplit[3]\n          }`}\n        </UpdateDate>\n        <CloseButton onClick={() => setCountryCode(null)} />\n      </Header>\n      <Board covidData={covidData} restriction={restriction} />\n    </Wrapper>\n  );\n};\n\nexport default Main;\n","C:\\Users\\yooni\\Desktop\\covid19ver2\\covid19\\src\\components\\Header.js",["30","31"],"import styled from 'styled-components';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport Covid from '../asset/background/3670269.jpg';\nimport Location from '../asset/location.png';\nimport TooltipButton from '../asset/tooltipbutton.png';\nimport { useState } from 'react';\nconst HeaderWrapper = styled.header`\n  display: flex;\n  flex-direction: column;\n  min-height: 350px;\n`;\n\nconst Logo = styled.h1`\n  flex-basis: 50px;\n  flex-shrink: 1;\n  padding: 5%;\n  /* max-width: 400px; */\n`;\n\nconst LogoImg = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n`;\n\nconst SearchWrapper = styled.div`\n  position: relative;\n  /* height: 300px; */\n  /* flex-basis: 150px; */\n  flex-shrink: 0;\n  padding: 0 3%;\n  z-index: 99;\n  & .wrapper {\n    background-color: unset;\n  }\n\n  & > div > div > div:nth-child(1) {\n    background-color: #fff;\n    &:hover {\n      box-shadow: rgba(32, 33, 36, 0.28) 0px 1px 6px 0px;\n    }\n    border: 1px solid #dfe1e5;\n  }\n  & > div > div > div:nth-child(2) {\n    border: 1px solid #dfe1e5;\n    box-shadow: rgba(32, 33, 36, 0.28) 0px 1px 6px 0px;\n    margin-top: 10px;\n\n    background-color: #fff;\n    max-height: 250px;\n    overflow-y: scroll;\n    ::-webkit-scrollbar {\n      width: 10px;\n    }\n    ::-webkit-scrollbar-thumb {\n      background: #eea069;\n      border-radius: 5px;\n    }\n    ::-webkit-scrollbar-track {\n      border-radius: 10px;\n    }\n  }\n`;\n\nexport const Tooltip = styled.div`\n  text-align: center;\n  position: absolute;\n  width: 95%;\n  height: 350px;\n  left: 2.5%;\n  top: 15px;\n  color: #fff;\n  padding: 30px 20px 0;\n  line-height: 1.1;\n  border-radius: 30px;\n  box-shadow: 0 0 10px #333;\n  background: #a6a6a6;\n  border-radius: 30px;\n  z-index: 10;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 70%;\n    width: 0;\n    height: 0;\n    border: 29px solid transparent;\n    border-bottom-color: #a6a6a6;\n    z-index: 9;\n    border-top: 0;\n    border-right: 0;\n    margin-left: 39.5px;\n    margin-top: -29px;\n  }\n`;\n\nconst Header = ({ locations, setCountryCode }) => {\n  const [isTooltipShown, setIsTooltipShown] = useState(false);\n  const handleOnSearch = (string, results) => {\n    // onSearch will have as the first callback parameter\n    // the string searched and for the second the results.\n  };\n\n  const handleOnHover = (result) => {\n    // the item hovered\n    // console.log(result);\n  };\n\n  const handleOnSelect = (item) => {\n    // the item selected\n    console.log(item);\n    setCountryCode(item.countryCode);\n  };\n\n  const handleOnFocus = () => {\n    console.log('Focused');\n  };\n\n  const formatResult = (item) => {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          // height: '100%',\n          alignItems: 'center',\n          // '&:hover': { backgroundColor: '#eea069' },\n          // cursor: 'pointer',\n        }}\n      >\n        <img src={Location} width={35} height={35} />\n        <span style={{ color: '#000' }}>{item}</span>\n      </div>\n    );\n    // return (<p dangerouslySetInnerHTML={{__html: '<strong>'+item+'</strong>'}}></p>); //To format result as html\n  };\n  return (\n    <HeaderWrapper>\n      <Logo>\n        <LogoImg src={Covid} />\n      </Logo>\n      <SearchWrapper>\n        <img\n          src={TooltipButton}\n          width={15}\n          height={15}\n          style={{ position: 'absolute', top: '-25px', right: '25px' }}\n          onClick={() => setIsTooltipShown((prev) => !prev)}\n        />\n        {isTooltipShown && (\n          <Tooltip>\n            The information on this website is compiled by a dedicated team of\n            researchers who liaise with immigration authorities, government\n            departments and health agencies worldwide in order to ensure the\n            information presented here is verified and correct at the time of\n            publication.* However, COVICO cannot guarantee this information is\n            accurate as the ongoing COVID-19 pandemic means that travel\n            regulations are subject to rapid change. By clicking on Start, you\n            agree to the Privacy Policy and Terms and Conditions. <br />\n            If you would like to know more about the terms and conditions,\n            should you email 1909355@buckingham.ac.uk\n            <br />\n            <br />{' '}\n            <span\n              style={{ fontWeight: 700 }}\n              onClick={() => setIsTooltipShown(false)}\n            >\n              Click to Close\n            </span>\n          </Tooltip>\n        )}\n        <ReactSearchAutocomplete\n          items={locations}\n          onSearch={handleOnSearch}\n          onHover={handleOnHover}\n          onSelect={handleOnSelect}\n          onFocus={handleOnFocus}\n          autoFocus\n          formatResult={formatResult}\n          styling={{\n            height: '60px',\n            // border: '1px solid #dfe1e5',\n            border: 'none',\n            borderRadius: '10px',\n            backgroundColor: 'white',\n            // boxShadow: 'rgba(32, 33, 36, 0.28) 0px 1px 6px 0px',\n            boxShadow: 'none',\n            hoverBackgroundColor: '#eee',\n            color: '#8DCBB7',\n            fontSize: '22px',\n            fontFamily: 'Arial',\n            iconColor: '#8DCBB7',\n            lineColor: 'rgb(232, 234, 237)',\n            placeholderColor: 'grey',\n            clearIconMargin: '3px 14px 0 0',\n            searchIconMargin: '0 0 0 16px',\n          }}\n          fuseOptions={{ threshold: 0, keys: ['country'] }}\n          resultStringKeyName=\"country\"\n          showIcon={false}\n          maxResults={30}\n        />\n      </SearchWrapper>\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","C:\\Users\\yooni\\Desktop\\covid19ver2\\covid19\\src\\components\\Board.js",["32","33"],"import styled, { css } from 'styled-components';\nimport Cases from '../asset/Cases.png';\nimport Vaccination from '../asset/Vaccination.png';\nimport Death from '../asset/Death.png';\nimport Isolation from '../asset/Isolation.png';\nimport Prohibition from '../asset/Prohibition.png';\nimport Travel from '../asset/Travel.png';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport { useState } from 'react';\n\nconst headingStyle = css`\n  font-size: 18px;\n  color: #1a4556;\n  font-weight: 700;\n`;\n\nconst descStyle = css`\n  font-size: 10px;\n  color: #555;\n`;\n\nconst Wrapper = styled.section`\n  margin-top: -40px;\n  min-height: 600px;\n  border: 2px solid #1a4556;\n  border-radius: 20px;\n  background-color: #fff;\n  padding: 0 5%;\n`;\n\nconst DailyList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  height: 170px;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst DashedLine = styled.div`\n  border: none;\n  border-top: 1px dashed #ccc;\n  color: #fff;\n  background-color: #fff;\n  height: 1px;\n\n  margin-top: 25px;\n  margin-bottom: 18px;\n`;\n\nconst RestrictionStatus = {\n  OPENED: 'Opened Border Crossing',\n  LIMETED: 'Limited Border Crossing',\n  PROHIBITED: 'Prohibited Border Crossing',\n};\n\nconst Board = ({ covidData, restriction }) => {\n  const newestData = covidData.data[covidData.data.length - 1];\n  // console.log(newestData);\n\n  console.log(restriction);\n  const resolveStatus = (txt) => {\n    let result = RestrictionStatus.OPENED;\n    if (txt.includes('중지') || txt.includes('금지')) {\n      result = RestrictionStatus.PROHIBITED;\n      if (txt.includes('가능') || txt.includes('허용'))\n        result = RestrictionStatus.LIMETED;\n    }\n    return result;\n  };\n  return (\n    <Wrapper>\n      <DailyList>\n        {[\n          {\n            type: 'case',\n            imgSrc: Cases,\n            perDay: newestData.new_cases,\n            description: 'Cases per day',\n          },\n          {\n            type: 'vaccination',\n            imgSrc: Vaccination,\n            perDay: newestData.new_vaccinations,\n            description: 'Vaccination per day',\n          },\n          {\n            type: 'death',\n            imgSrc: Death,\n            perDay: newestData.new_deaths,\n            description: 'Death per day',\n          },\n        ].map(({ type, imgSrc, perDay, description }) => {\n          return (\n            <DailyFigure\n              key={type}\n              type={type}\n              imgSrc={imgSrc}\n              perDay={perDay}\n              description={description}\n            />\n          );\n        })}\n      </DailyList>\n      <Details\n        type=\"chart\"\n        description=\"COVID-19 Details\"\n        covidDataArray={covidData.data}\n      />\n      <DashedLine />\n      <Limited\n        restrictionStatus={\n          restriction[0]?.txt_origin_cn\n            ? resolveStatus(restriction[0].txt_origin_cn)\n            : RestrictionStatus.LIMETED\n        }\n        restriction={restriction}\n      />\n      <Details\n        type=\"text\"\n        description=\"Restrictions Details\"\n        restrictionStatus={\n          restriction[0]?.txt_origin_cn\n            ? resolveStatus(restriction[0]?.txt_origin_cn)\n            : RestrictionStatus.LIMETED\n        }\n        restriction={restriction}\n      />\n    </Wrapper>\n  );\n};\n\nconst FigureWrapper = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n`;\n\nconst Change = styled.span`\n  display: block;\n  ${headingStyle}\n  margin: 5px 0;\n`;\n\nconst Description = styled.span`\n  display: block;\n  ${descStyle}\n  white-space: nowrap;\n  text-align: center;\n`;\n\nconst numberWithCommas = (x) => {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\nconst DailyFigure = ({ type, imgSrc, perDay, description }) => {\n  return (\n    <FigureWrapper>\n      <img src={imgSrc} width={40} height={40} alt={type} />\n      <Change>{perDay ? numberWithCommas(perDay) : '-'}</Change>\n      <Description>{description}</Description>\n    </FigureWrapper>\n  );\n};\n\nconst DetailWrapper = styled.div`\n  padding-left: 5px;\n  min-height: 65px;\n  background-color: #f2f2f2;\n  border-radius: 10px;\n  padding: 18px 0 0 7px;\n`;\nconst HeadingWrapper = styled.div`\n  width: 95%;\n  height: 30px;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n`;\nconst DetailHeading = styled.h2`\n  ${headingStyle}\n  align-self: center;\n`;\nconst DownArrow = styled.a`\n  /* display: block; */\n  border: solid black;\n  border-width: 0 1.5px 1.5px 0;\n  display: inline-block;\n  height: 0;\n  padding: 4px;\n  transform: rotate(45deg);\n  align-self: center;\n  /* -webkit-transform: rotate(45deg); */\n`;\n\nconst UnderLine = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: #1a4556;\n`;\n\nconst ChartHeading = styled.h3`\n  margin-top: 20px;\n  ${headingStyle}\n  color: #000;\n`;\n\nconst ChartSubtext = styled.span`\n  ${descStyle}\n  display:block;\n  margin: 10px 0 20px;\n`;\n\nconst Details = ({ type, description, covidDataArray, restriction }) => {\n  const [isShown, setIsShown] = useState(false);\n  const handleClick = () => {\n    setIsShown((prev) => !prev);\n  };\n  return (\n    <DetailWrapper>\n      <HeadingWrapper>\n        <DetailHeading>{description}</DetailHeading>\n        <DownArrow onClick={handleClick} />\n        <UnderLine />\n      </HeadingWrapper>\n\n      {isShown &&\n        type === 'chart' &&\n        [\n          {\n            chartName: 'Cases',\n            dataKey: 'new_cases_per_million',\n            description:\n              'Daily new confirmed COVID-19 cases per million people',\n          },\n          {\n            chartName: 'Vaccination',\n            dataKey: 'people_vaccinated_per_hundred',\n            description:\n              'Share of people who received at least one dose of COVID-19 vaccine',\n          },\n          {\n            chartName: 'Deaths',\n            dataKey: 'new_deaths_per_million',\n            description:\n              'Daily new confirmed COVID-19 deaths per million people',\n          },\n        ].map(({ chartName, dataKey, description }) => (\n          <>\n            <ChartHeading>{chartName}</ChartHeading>\n            <ChartSubtext>{description}</ChartSubtext>\n            <LineChart\n              width={300}\n              height={250}\n              data={covidDataArray}\n              margin={{ top: 5, right: 20, left: -30, bottom: 5 }}\n            >\n              {/* <CartesianGrid strokeDasharray=\" 3\" /> */}\n              <XAxis\n                dataKey=\"date\"\n                tickFormatter={(tick) => {\n                  const split = new Date(tick).toDateString().split(' ');\n\n                  return ` ${split[1].toUpperCase()} ${split[2]}, ${split[3]}`;\n                }}\n                tick={{ fontSize: 7 }}\n              />\n              <YAxis tick={{ fontSize: 10 }} />\n              <Tooltip />\n              <Line\n                type=\"basic\"\n                dataKey={dataKey}\n                stroke=\"#C7467F\"\n                strokeWidth={1}\n                dot={false}\n              />\n            </LineChart>\n          </>\n        ))}\n\n      {isShown && type === 'text' && (\n        <div\n          dangerouslySetInnerHTML={{ __html: restriction[0]?.html_origin_cn }}\n        />\n      )}\n    </DetailWrapper>\n  );\n};\n\nconst LimitedWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n\nconst LimitedHeading = styled.h2`\n  margin: 7px 0;\n  ${headingStyle}\n`;\n\nconst CheckText = styled.span`\n  ${descStyle}\n`;\n\nconst Limited = ({ restrictionStatus, restriction }) => {\n  return (\n    <LimitedWrapper>\n      <img\n        src={\n          restrictionStatus === RestrictionStatus.LIMETED\n            ? Isolation\n            : restrictionStatus === RestrictionStatus.OPENED\n            ? Travel\n            : Prohibition\n        }\n        width={40}\n        height={40}\n        alt=\"restriction\"\n      />\n      <LimitedHeading>{restrictionStatus}</LimitedHeading>\n      <CheckText>Please check your details</CheckText>\n      <p style={{ fontWeight: 600, textAlign: 'center', marginTop: '7px' }}>\n        {\n          restriction[0]?.txt_origin_cn\n            .split('*')[0]\n            .split('-')[0]\n            .split('※')[0]\n        }\n      </p>\n    </LimitedWrapper>\n  );\n};\n\nexport default Board;\n",{"ruleId":"34","severity":1,"message":"35","line":121,"column":9,"nodeType":"36","endLine":127,"endColumn":11},{"ruleId":"34","severity":1,"message":"35","line":130,"column":9,"nodeType":"36","endLine":130,"endColumn":54},{"ruleId":"34","severity":1,"message":"35","line":142,"column":9,"nodeType":"36","endLine":148,"endColumn":11},{"ruleId":"37","severity":1,"message":"38","line":9,"column":3,"nodeType":"39","messageId":"40","endLine":9,"endColumn":16},{"ruleId":"37","severity":1,"message":"41","line":10,"column":3,"nodeType":"39","messageId":"40","endLine":10,"endColumn":9},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'CartesianGrid' is defined but never used.","Identifier","unusedVar","'Legend' is defined but never used."]